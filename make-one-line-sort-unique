#/usr/bin/env bash

# This script assumes a stream of pretty-printed states in /dev/stdin
# where states are separated by lines of the form
# =====================================================================
# (without the leading # ) and produces a stream of states in /dev/stdout,
# one state per line, sorted. The script warns if there are duplicate lines
# (there shouldn't be if the input is a /set/ of states).

# Usage example: cat pretty-printed-states.txt | make-one-line-sort-unique > sorted-compact-states.txt

SEP="@"
INP=$(mktemp)

cat /dev/stdin > $INP

cat $INP | dos2unix.exe | diff -q - $INP > /dev/null || {
    {
	echo "$0: warning: given input stream uses DOS line breaks."
	echo "Please convert to UNIX format first (e.g. dos2unix)."
	echo "Exiting."
    } > /dev/stderr
    exit -1; }

cat $INP | \
  egrep -v "^Hash:" | \
  sed -e "s/^=\+$/$SEP/g" | \
  tr "\n" " " | \
  tr -s " " | \
  tr "$SEP" "\n" | \
  sed -e "s/^[[:space:]]\+//g" | \
  sed -e "s/[[:space:]]\+$//g" | \
  sort | \
  tee >(sort -cu 2> /dev/null || { echo; echo "$0: warning: given stream of states contains duplicates"; } > /dev/stderr)
